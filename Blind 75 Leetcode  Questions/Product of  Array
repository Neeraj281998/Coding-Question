 '''
 Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
 '''

#METHOD 1:

def productExceptSelf(self, nums: List[int]) -> List[int]:
        n=len(nums)
        left=[]
        right=[0]*n
        result=[0]*n
        product=1
        for i in range(n):
            product*=nums[i]
            left.append(product)
        product=1
        for i in range(n-1,-1,-1):
            right[i]=product*nums[i]
            product*=nums[i]
        result[-1]=left[-2]
        for i in range(n-2,0,-1):
            result[i]=left[i-1]*right[i+1]
        result[0]=right[1]
        return result

 
 #METHOD 2
 def productExceptSelf(self, nums: List[int]) -> List[int]:
        result=[]
        if (len(nums)<1):
            return result
        product=1
        for i in range(len(nums)):
            result.append(nums[i]*product)
            product*=nums[i]
        product=1
        for i in range(len(result)-1,0,-1):
            result[i]=result[i-1]*product
            product*=nums[i]
        result[0]=product
        return result
