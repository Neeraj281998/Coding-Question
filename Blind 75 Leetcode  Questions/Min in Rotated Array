Given the sorted rotated array nums of unique elements, return the minimum element of this array.


#METHOD 1:

def findMin(self, nums: List[int]) -> int:
        if len(nums)==1:
            return nums[0]
        if nums[-1]>nums[0]:
            return nums[0]
        left=0
        right=len(nums)-1
        while right>=left:
            mid=(left+right)//2
            if nums[mid]>nums[mid+1]:
                return nums[mid+1]
            if nums[mid-1]>nums[mid]:
                return nums[mid]
            if nums[mid]>nums[0]:
                left=mid+1
            else:
                right=mid-1
        return -1

#METHOD 2:

    def findMin(self, nums: List[int]) -> int:
        lo, hi = 0, len(nums) - 1
        while lo < hi:
            mid = lo + (hi -lo) // 2
            if nums[mid] > nums[hi]:
                lo = mid + 1
            else:
                hi = mid
        return nums[lo] 
