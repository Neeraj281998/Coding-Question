Given an array A of n positive numbers. The task is to find the first Equilibium Point in the array. 
Equilibrium Point in an array is a position such that the sum of elements before it is equal to the sum of elements after it.

Note: Retun the index of Equilibrium point. (1-based index)




---------------------------------METHOD 1------------------------------------------

    def equilibriumPoint(self,A, N):
        # Your code here
        #1  3 5  2  2
        # 1 4 9 11 13
        #13 12 9 4 2
        if len(A)==1:
            return 1

        left=[None]*len(A)
        left[0]=A[0]
        right=[None]*len(A)
        right[-1]=A[-1]
    
        for i in range(1,len(A)):
            left[i]=A[i]+left[i-1]
        # print(left)
        for i in range(len(A)-2,-1,-1):
            right[i]=right[i+1]+A[i]
    
        for i in range(1,len(A)-1):
            if left[i-1]==right[i+1]:
                return i+1
        return -1

---------------------------------METHOD 2------------------------------------------
def equilibriumPoint(self,A, N):
        # Your code here
        #1  3 5  2  2
        # 1 4 9 11 13
        #13 12 9 4 2
        totalSum=0
        for i in A:
            totalSum+=i
        
        leftSum=0
        for i in range(len(A)):
            totalSum-=A[i]
            if leftSum==totalSum:
                return i+1
            leftSum+=A[i]
        return -1
