Given an array having both positive and negative integers. The task is to compute the length of the largest subarray with sum 0

-----------------PYTHON--------------------------------------------------------
def maxLen(self, n, arr):
        #Code here
        memo={}
        curSum=0
        maxLength=0
        for i in range (len(arr)):
            curSum+=arr[i]
            if curSum==0:
                maxLength=i+1
            else:
                if curSum in memo:
                    maxLength=max(maxLength,i-memo[curSum])
                else:
                    memo[curSum]=i
        return maxLength
        
----------------------------------java-----------------------------------------
int maxLen(int arr[], int n)
    {
        // Your code here
        HashMap<Integer,Integer> memo=new HashMap<Integer,Integer>();
        int maxLength=0;
        int curSum=0;
        for(int i=0;i<n;i++){
            curSum+=arr[i];
            if(curSum==0){
                maxLength=i+1;
            }
            else{
                if (memo.get(curSum)!=null){
                    maxLength=Math.max(maxLength,i-memo.get(curSum));
                }else{
                    memo.put(curSum,i);
                }
            }
        }
    return maxLength;
