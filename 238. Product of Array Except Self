#----------------------Solution 1
O(N) and O(N)
def prductOfArr(nums):
    left=[0]*len(nums)
    right=[0]*len(nums)
    output=[0]*len(nums)
    
    left[0]=nums[0]
    for i in range (1,len(nums)):
        left[i]=nums[i]*nums[i-1]
    right[-1]=nums[-1]
    for i in range(len(nums)-2,-1,-1):
        right[i]=nums[i]*right[i+1]
    
    output[0]=right[0]
    output[-1]=left[-2]
    for i in range (len(nums)-2,0,-1):
        output[i]=left[i-1]*right[i+1]
    print(output)
    

#------------------------Solution 2
#optimized
O(N) and O(1)
    '''
    n=len(nums)
    output=[]
    if(n<1):
        return output
    product=1
    for i in range(n):
        product*=nums[i]
        output.append(product)
    product=1
    for i in range(n-1,0,-1):
        output[i]=output[i-1]*product
        product*=nums[i]
    output[0]=product
    return output
    '''
